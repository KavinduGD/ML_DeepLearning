<Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"
           maxThreads="150" SSLEnabled="true" scheme="https" secure="true"
           clientAuth="false" sslProtocol="TLS" 
           keystoreFile="/path/to/keystore.jks" keystorePass="yourpassword" />


SSD Lab 03
Configure the Apache tomcat Web server to support HTTPS
Install JDK
•	sudo apt install default-jre
•	sudo apt install default-jdk
 
Install Apache Tomcat (Version 10.1.28)
•	cd /opt
•	mkdir tomcat
•	sudo wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.28/bin/apache-tomcat-10.1.28.tar.gz
•	sudo tar xzvf apache-tomcat-10.1.28.tar.gz -C /opt/tomcat –strip-components=1
•	sudo chmod -R 777 /opt/tomcat
 
 
 
Run Apache Tomcat Server
•	sudo /opt/tomcat/bin/startup.sh
 
Generate a Keystore
•	sudo keytool -genkey -alias tomcat -keyalg RSA -keystore /opt/tomcat/conf/keystore.jks -keysize 2048 -validity 3650
 
Configure Tomcat to Use the Keystore
•	sudo nano /opt/tomcat/conf/server.xml
 
 

Log the SSL handshake messages to a log file. Extract the TLS related messages from the log file and copy it to a separate text file.
Enable SSL Debug Logging
•	sudo nano /opt/tomcat/bin/catalina.sh
 
•	export CATALINA_OPTS="$CATALINA_OPTS -Djavax.net.debug=ssl:handshake"

 
Extract TLS Related Messages
•	sudo grep "TLS" /opt/tomcat/logs/catalina.out > /opt/tomcat/logs/tls_handshake.log
 
 
 
